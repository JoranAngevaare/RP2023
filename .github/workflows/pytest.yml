name: Test package

# Trigger this code when a new release is published
on:
  workflow_dispatch:
  release:
    types: [ created ]
  pull_request:
  push:
    branches:
      - master

jobs:
  update:
    name: "${{matrix.os}} ${{ matrix.test }}_py${{ matrix.python-version }}"
    strategy:
      fail-fast: False
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        os: [ubuntu-latest, windows-latest, ubuntu-20.04]
        test: [ 'coveralls' ]
        exclude:
          - python-version: "3.10"
            os: ubuntu-20.04
          - python-version: "3.9"
            os: ubuntu-20.04
          - python-version: "3.8"
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    env:
      NUMBA_DISABLE_JIT: 1
    steps:
      # Setup and installation
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: download data
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt install unzip # Installs the unzip package
          cd data
          wget https://surfdrive.surf.nl/files/index.php/s/rL452j1tsQyHc7w/download
          mv download download.zip
          unzip download.zip
          mv 2023_01_09_rp2023/* .
          cd ..
      - name: download data
        if: matrix.os == 'windows-latest'
        run: |
          cd data
          curl --url https://surfdrive.surf.nl/files/index.php/s/rL452j1tsQyHc7w/download --output download.zip
          tar -xf download.zip
          move 2023_01_09_rp2023/co60 .
          move 2023_01_09_rp2023/temperature .
          move 2023_01_09_rp2023/ti44 .
          cd ..
      - name: Install requirements
        run: |
          pip install -r extra_requirements/requirements-tests.txt
          python setup.py develop
      - name: Test package
        if: matrix.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pytest --cov RP2023 -v -n auto --nbmake 0*/*.ipynb --durations 0 --nb-coverage --timeout 900
          coveralls --service=github
      - name: Test package
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUMBA_DISABLE_JIT: 1
        run: |
          pytest --cov RP2023 -v -n auto --nbmake "00_getting_started\\1. open_co60_file.ipynb" --durations 0 --nb-coverage  --timeout 900
          pytest --cov-append --cov RP2023 -v -n auto --nbmake "01_coincidence_measurements\\2. coincidence_matching_Co60.ipynb" --durations 0 --nb-coverage  --timeout 900
          pytest --cov-append --cov RP2023 -v -n auto --nbmake "01_coincidence_measurements\\3. open_raw_root_and_ti44.ipynb" --durations 0 --nb-coverage  --timeout 900
          pytest --cov-append --cov RP2023 -v -n auto --nbmake "02_future_work/5. Rate - Temperature correlation.ipynb" --durations 0 --nb-coverage  --timeout 900
          coveralls --service=github
      - name: goodbye
        run: echo "tests done, bye bye"
